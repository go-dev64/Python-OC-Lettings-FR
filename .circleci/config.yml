version: 2.1
orbs:
  python: circleci/python@2.1.1
  # heroku: circleci/heroku@1.2.6

jobs:
  build_and_test: # this can be any name you choose
    executor: python/default
    steps:
      - checkout # move on main branch
      - python/install-packages: # install all packages
          pkg-manager: pip
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $SECRET_KEY_DJANGO # this env var must be set within the project
            echo $SENTRY_DNS # this env var must be set within the project
      - run:
          name: Check with Flake8
          command: flake8   # Run Flake8 to check your code
      - run:
          name: Run tests
          command: |
            coverage run -m pytest
            coverage_percentage=$(coverage report --fail-under=80 -m | tail -n 1 | awk '{print $4}' | tr -d '%')
            if [ "$coverage_percentage" -lt 80 ]; then
                echo "Code coverage is below 80%. Coverage: $coverage_percentage%"
                exit 1
            fi
            coverage html  # open htmlcov/index.html in a browser
      - store_artifacts:
          path: htmlcov
      - persist_to_workspace:
          root: ~/project
          paths:
            - . 

  docker_image:
    docker:
      - image: cimg/base:2022.06
  
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true

          
      - run:
          name: Set Docker Image Tag
          command: echo TAG=0.1.$CIRCLE_BUILD_NUM

      # build docker image with docker compos. rename tag with commit hash.
      - run:
          name: Build Docker image
          command: |
            docker build -t $DOCKERHUB_USERNAME:$TAG

      # Push image to docker HUB
      - run:
          name: Push Docker image
          command: |
              docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
              docker push python-oc-lettings-fr-django:$TAG




workflows:
  test_my_app:
    jobs:
      - build_and_test
      - docker_image
      
