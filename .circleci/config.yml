version: 2.1
orbs:
  docker: circleci/docker@2.1.3
  python: circleci/python@2.1.1
  
jobs:
  build_and_test: 
    docker:
     - image: cimg/python:3.10
    steps:
      - checkout 
      - python/install-packages: # install all packages
          pkg-manager: pip
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo $SECRET_KEY_DJANGO # this env var must be set within the project
            echo $SENTRY_DNS # this env var must be set within the project
      - run:
          name: Check with Flake8
          command: flake8   # Run Flake8 to check your code
      - run:
          name: Run tests
          command: |
            coverage run -m pytest
            coverage_percentage=$(coverage report --fail-under=80 -m | tail -n 1 | awk '{print $4}' | tr -d '%')
            if [ "$coverage_percentage" -lt 80 ]; then
                echo "Code coverage is below 80%. Coverage: $coverage_percentage%"
                exit 1
            fi
            coverage html  # open htmlcov/index.html in a browser
      - store_artifacts:
          path: htmlcov
 

  build-docker-image:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true

      # build docker image with docker compos. rename tag with commit hash.
      - run:
          name: Build images 
          command: |
            docker build -t oc_lettings --build-arg SECRET_KEY_DJANGO=$SECRET_KEY_DJANGO --build-arg SENTRY_DNS=$SENTRY_DNS .
            docker tag oc_lettings:latest godev64/oc_lettings:CIRCLE_SHA1
              
      # Push image to docker 
      - run:
          name: Push Docker image
          command: |
              echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
              docker push godev64/oc_lettings:CIRCLE_SHA1

  deployment:
    docker:
      -image:cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Deploy"
          command:
              curl-XGET(https://api.render.com/deploy/srv-cknu61ujmi5c73a0n920?key=k8fYtDRDmMA)

      

workflows:
  oc_lettings_site:
    jobs: 
      - build_and_test
      - build-docker-image
      - deployment

      
